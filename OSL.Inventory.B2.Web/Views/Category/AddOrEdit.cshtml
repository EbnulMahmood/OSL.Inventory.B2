@model OSL.Inventory.B2.Service.DTOs.CategoryDto

@{
    ViewBag.Title = "Add Category";
    Layout = null;
}

@using (Html.BeginForm("AddOrEdit", "Category", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.AntiForgeryToken()

    <div class="form-row">
        @Html.HiddenFor(model => model.Id)

        <div class="form-group col-md-6 pt-2">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 pt-2">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 pt-2">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control">
                    <option disabled selected value="">Select Status</option>
                    <option value="@OSL.Inventory.B2.Service.DTOs.Enums.StatusDto.Active">Active</option>
                    <option value="@OSL.Inventory.B2.Service.DTOs.Enums.StatusDto.Inactive">Inactive</option>
                </select>
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 pt-4">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section scripts {
    <script>
        // Submit Form
        const SubmitForm = (form) => {
            $.validator.unobtrusive.parse(form)

            if ($(form).valid()) {

                const ajaxConfig = {
                    type: 'POST',
                    url: form.action,
                    data: new FormData(form),
                    success: response => {
                        $('#nav-index').html(response);
                    }
                };

                if ($(form).attr('enctype') == 'multipart/form-data') {
                    ajaxConfig['contentType'] = false;
                    ajaxConfig['processData'] = false;
                }

                $.ajax(ajaxConfig);
            }

            return false;
        }
    </script>
}