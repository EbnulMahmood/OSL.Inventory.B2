@model IEnumerable<OSL.Inventory.B2.Service.DTOs.CategoryDto>
@using OSL.Inventory.B2.Service.DTOs.Enums

@{
    ViewBag.Title = "Categories";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Categories</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <button type="button" class="btn btn-sm btn-outline-secondary">Share</button>
            <button type="button" class="btn btn-sm btn-outline-secondary">Export</button>
        </div>
        <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-calendar align-text-bottom" aria-hidden="true"><rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect><line x1="16" y1="2" x2="16" y2="6"></line><line x1="8" y1="2" x2="8" y2="6"></line><line x1="3" y1="10" x2="21" y2="10"></line></svg>
            This week
        </button>
    </div>
</div>

<!-- modal palaceholder -->
<div id="modal-placeholder-category"></div>

<div class="col-12">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            @Html.ActionLink("Home", "Index", "Home", new { area = "Home" }, new { @class = "breadcrumb-item" })
            <li class="breadcrumb-item active" aria-current="page">Categories</li>
        </ol>
    </nav>
</div>

@if (TempData["message"] != null)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        @TempData["message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="row p-2">
    <div class="col-md-3 p-2">
        <input class="form-control" type="text" id="search-by-name" placeholder="Search Name" />
    </div>
    <div class="col-md-3 p-2">
        <select class="form-control" id="filter-by-status">
            <option selected value="">Select Status</option>
            <option value="@StatusDto.Active">Active</option>
            <option value="@StatusDto.Inactive">Inactive</option>
        </select>
    </div>
    <div class="col p-2 text-end">
        @Html.ActionLink("Create New", "Create", "Category", new { @class = "btn btn-primary text-end" })
    </div>
</div>

<div class=" table-responsive">
    <table id="categoryDatatable" class=" pt-2 table table-condensed table-striped border-dark">
        <thead class="table-dark">
            <tr>
                <th class="w-auto">Name</th>
                <th class="w-25">Status</th>
                <th class="w-25">Action</th>
            </tr>
        </thead>
    </table>
</div>

@section scripts {
    <script src="//cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/js/datatable.js"></script>
    <script src="~/Scripts/js/modal.js"></script>

    <script>
        $(document).ready(function () {
            // datatable
            const filterSearchOptionsForCategory = () => {
                return {
                    searchByName: "#search-by-name",
                    filterByStatus: "#filter-by-status",
                }
            }

            const configFilterSearchOptions = (options) => {
                const configOption = {};
                for (const [key, value] of Object.entries(options())) {
                    configOption[key] = $(value).val().toLowerCase();
                }
                return configOption;
            }

            const categoryDatatableId = '#categoryDatatable';
            const categoryIndexUrl = 'Category/Index';

            const columnsMap = [
                { data: 'Name' },
                { data: 'StatusHtml' },
                { data: 'ActionLinkHtml' }
            ];

            DataTable(categoryDatatableId, categoryIndexUrl,
                filterSearchOptionsForCategory, configFilterSearchOptions, columnsMap);

            // modal
            const url = 'Category/Delete';
            const idElement = 'data-category-id';
            const placeHolderId = '#modal-placeholder-category';
            const btnDeleteClass = '.btn-category-delete';
            Modal(url, idElement, placeHolderId, btnDeleteClass);
        });
    </script>

    @Scripts.Render("~/bundles/jqueryval")
}