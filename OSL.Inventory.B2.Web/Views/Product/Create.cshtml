@model OSL.Inventory.B2.Service.DTOs.ProductDto
@using OSL.Inventory.B2.Service.DTOs.Enums

@{
    ViewBag.Title = "Create";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Create Product</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <button type="button" class="btn btn-sm btn-outline-secondary">Share</button>
            <button type="button" class="btn btn-sm btn-outline-secondary">Export</button>
        </div>
        <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-calendar align-text-bottom" aria-hidden="true"><rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect><line x1="16" y1="2" x2="16" y2="6"></line><line x1="8" y1="2" x2="8" y2="6"></line><line x1="3" y1="10" x2="21" y2="10"></line></svg>
            This week
        </button>
    </div>
</div>

<div class="col-12">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            @Html.ActionLink("Home", "Index", "Home", new { area = "Home" }, new { @class = "breadcrumb-item" })
            @Html.ActionLink("Products", "Index", "Product", new { @class = "breadcrumb-item" })
            <li class="breadcrumb-item active" aria-current="page">Create</li>
        </ol>
    </nav>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Limited, htmlAttributes: new { @class = "form-check-label col-md-2" })
                <div class="form-check form-switch mt-2">
                    <input class="form-check-input" type="checkbox" name="Limited" value="true" />
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.InStock, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.EditorFor(model => model.InStock, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InStock, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.PricePerUnit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.EditorFor(model => model.PricePerUnit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PricePerUnit, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.BasicUnit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    <select class="form-control" name="BasicUnit">
                        <option selected value="">Select Basic Unit</option>
                        <option value="@BasicUnitDto.Piece">Piece</option>
                        <option value="@BasicUnitDto.Kg">Kg</option>
                        <option value="@BasicUnitDto.Liter">Liter</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.BasicUnit, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.DropDownListFor(model => model.CategoryId, ViewBag.Categories as SelectList, "--Select Category--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row pt-4">
            <div class="form-group col-md-12">
                <div class="col-md-offset-2 col-md-6">
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
